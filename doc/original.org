* Original randomhack source (6471)
** main.c (182)
   Includes all the global definitions, item and creature structs, and
   the main game loop. Also #includes all the other files with source
   definitions.
*** int main(void) (23)
    Very simple game loop with these function calls:
    getInput()
    gameLogic()
    draw()
** sprites.h (813)
   Holds the data for all the sprites used in the game. Represented as
   arrays of short int, each sprite consists of 64 (8*8) pixels and
   one color. No functions are defined in this file.
** draw.h (347)
*** bool lineOfSight(int x1, int y1, int x2, int y2) (95)
    Bresenhams used to determine line of sight. Returns false if there
    are any intervening block(s), true otherwise.
*** inline void drawPixel(int position,int color) (7)
    Utility function to set a value in VRAM_A. Doesn't seem to be used
    in the code. Guards against addresses >= 49152.
*** void drawLevel(int type, int color, int expand, int wobbley) (22)
    Draws blocks in the level, with some flags for exanding and
    wobblying randomly.
*** void drawSprite(short int sprite[], short int xpos, short int ypos) (17)
    Loops through the 8x8 sprite, drawing the color found at index 64
    if a pixel should be set, otherwise color 0.
*** void drawThings() (102)
    Draws items, creatures, and the player. Has special code for
    hardcore mode (for line-of-sight and FOW). Draws player sprite
    last, so I assume that it's drawn over any other object.
*** void draw() (73)
    Calls drawThings if redraw is true. Redraws the console.
** gamelogic.h (2123)
*** void pushText(const char *pushstring) (16)
    Adds a line of text to the console, and moves the previous lines
    upward. There are 10 lines of text, and each line has 32
    characters.
*** void createCreature(int expos, int eypos, int specific) (771)
    Creates a random creature at expos, eypos. If specific is > 0, the
    creature type is specified by specific instead.
*** void createSword(short int expos, short int eypos) (42)
    Puts a random sword at expos, eypos. Sword power is determined by
    level.
*** void createItem(short int expos, short int eypos, short int type) (554)
    Creates specified item at expos, eypos. Modifies itemmatrix.
*** void createNpc(short int expos, short int eypos) (50)
    Creates a shop keeper at expos, eypos. Modifes creaturematrix.
*** void createPlayerName() (48)
    Sets playername, playergender, and playerattract.
*** void resetGame() (53)
    Nullifies values and displays starting message in the console.
*** void gameLogic() (57)
    Check for player hp limit and player death. Revive if player has
    found an ankh.
*** void killCreature(short int expos, short int eypos) (91)
    Remove creature and create blood (much blood if gib and
    playeroption is set to true). Also contains code for killing the
    final boss.
*** void crushItem(short int expos, short int eypos) (78)
    Code for crushing various things; shop items, sweet berries,
    bitter berries, HID. Other items can be crushed to dust. Contains
    code for summoning create #42 (?).
*** void scrollQuotes() (319)
    Contains quotes found on all the scrolls. If we're on the final
    level, display quote #23.
** newlevel.h (771)
*** void cutLine(int x1, int y1, int x2, int y2, int tunnelsize) (55)
    Uses Bresenhams to cut a line with the given width in the level.
*** void newLevel() (707)
    Longest function in randomhack? Code for generating the level
    layout, placing all items and creatures, and also special code for
    final level and NPC (shop keeper) level. Contains code for
    rendering the level as well.
** move.h
** getinput.h
